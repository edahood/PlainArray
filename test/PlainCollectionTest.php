<?php

require_once 'bootstrap.php';

/**
 * Test class for PlainArray.
 * Generated by PHPUnit on 2011-05-06 at 21:38:33.
 */
class PlainCollectionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var PlainArray
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PlainCollection;
    }
    protected function factory(){
        
        $arr = self::factory_array ();
        $this->object = new PlainCollection();
        foreach($arr as $curr){
            $this->object->add($curr);
        }
        return $this->object;
    }
    protected static function factory_array(){
        return array(
            array("name" => "Tom", "age" => 25, "weight" => 170.5, "is_active" => true)
            , array("name" => "Mike", "age" => 29, "weight" => 160.12, "is_active" => false)
            , array("name" => "Mikey", "age" => 2, "weight" => 16.12, "is_active" => true)
            );
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
   
    public function testCreate()
    {
       $this->factory();
       $this->assertInstanceOf('PlainCollection', $this->object);
     
    }
    
    public function testCount()
    {
       $this->factory();
       $arr = self::factory_array();
       $this->assertEquals(count($arr), count($this->object));
    }
    
    public function testRemove()
    {
        $this->factory();
        $this->assertEquals(count($this->object), 3);
        $this->object->remove(2);
        $this->assertEquals(count($this->object), 2);
             
    }  
}
?>